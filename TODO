TODO:

- grow dynamically to save memory
  - change grid to have an array of row elements
    - needs a lock to serialize adding/removing rows
    - each row element has a count of non-empty points, pointer to array of Points
    - row is dropped when all neighbouring rows are full
    - plane is dropped when plane has no rows left, or when planes above it are dropped
    - plane is added when plane below gains a row
    - row is added when it needs to store something other than empty space
  - split get_point and get_point_const
    - get_point creates a plane/row if needed and returns the point
    - get_point_const returns
      - a point if there is one
      - a generic empty point if above the surface
      - a generic full point if below
  - layer stats get generated by a dedicated thread, based on the data file, optionally deleting the file to save space

- peak tracking (id,x,y,z) per timestamp (peak defined as the highest point of a grain surrounded only by itself or empty space)
- colour based on angle

- deal with overhangs
- faster diffusion

- 3d visualization?

Paper: Ballistic Deposition Level Set Simulation
Only self shadowing, enough diffusion to make facets, but infinite schwobel barrier between faces
1. compare growth dependence on crystal orientation to BD model texture, roughness, grain area, self-affinity (functional form)
2. dependence on ray anyle
3. Influence of geometry on BD, l/sqrt(A), try various shapes: 3, 4, 6, 8, etc faces to fastest growth direction
4. Initial Distribution, try random vs 1,0,0, 1,1,1, etc, try non-rotated cubes

